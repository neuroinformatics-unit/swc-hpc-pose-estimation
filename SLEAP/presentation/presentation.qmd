---
title: Pose estimation with SLEAP
subtitle: Applied HPC use example
author: Niko Sirmpilatze
format:
    revealjs:
        theme: [default, niu-light.scss]
        logo: img/logo_niu_light.png
        footer: "Introduction to HPC with Linux | 2023-05-15"
        slide-number: c
        menu:
            numbers: true
        chalkboard: true
        scrollable: true
        preview-links: false
        view-distance: 10
        mobile-view-distance: 10
        auto-animate: true
        auto-play-media: true
        code-overflow: wrap
        highlight-style: atom-one
---

## Course materials {.smaller}

#### Sample data
`/ceph/scratch/neuroinformatics-dropoff/SLEAP_HPC_test_data`

- Mouse video (from [Loukia Katsouri](https://www.sainsburywellcome.org/web/people/loukia-katsouri))
- SLEAP project with labelled data

#### Github repository
[github.com/neuroinformatics-unit/swc-hpc-pose-estimation](https://github.com/neuroinformatics-unit/swc-hpc-pose-estimation)

- This presentation
- Example scripts

## Tracking animals in videos {.smaller}

:::: {.columns}

::: {.column width="60%"}
![source: [doi.org/10.1038/s41593-020-00734-z](https://doi.org/10.1038/s41593-020-00734-z)](img/tracking_types.png){fig-align=center height=500}
:::

::::

## Pose estimation {.smaller}
![source: [doi.org/10.1038/s41593-020-00734-z](https://doi.org/10.1038/s41593-020-00734-z)](img/pose_estimation_2D.png){.r-stretch fig-align=left}

## Existing tools

:::: {.columns}

::: {.column width="35%"}
- [DeepLabCut](http://www.mackenziemathislab.org/deeplabcut)
- [SLEAP](https://sleap.ai/)
- Many others:
  - OpenPose
  - DeepPoseKit
  - Anipose
  - Freipose
  - ...
:::

::: {.column width="65%"}
![](img/sleap_movie.gif)
:::

::::

## SLEAP workflow

![](diagrams/pose-estimation.svg){fig-align=center height=150}

::: {.fragment}
- Training and inference are GPU-intensive
- We can delegate to the HPC cluster's GPU nodes
:::

## Label body parts {.smaller}

- Annotate frames using the `sleap-label` GUI on your PC/laptop
- Save project (e.g. `labels.v001.slp`)

![](img/sleap-label_screenshot.png)

## Configure training {.smaller}

- In the `sleap-label` GUI: `Predict/Run Training...`

![](img/sleap-train_config.png)

- When ready, `Export training job package...`

## Training job package contents

`labels.v001.slp.training_job.zip` => unzip

```{.bash code-line-numbers=false}
# Copy of labelled frames
labels.v001.pkg.slp

# Model configuration files
centroid.json
centered_instance.json

# Bash scripts for running training and inference
train_script.sh
inference_script.sh

# Summary of all jobs
jobs.yaml
```

## Top-down vs bottom-up {.smaller}

![](img/pose_estimation_topdown.png){fig-align=left height=220}

. . . 

![source: [doi.org/10.1038/s41593-020-00734-z](https://doi.org/10.1038/s41593-020-00734-z)](img/pose_estimation_bottomup.png){fig-align=left height=220}

## Finding our project on the HPC

```{.bash code-line-numbers="1-3|5-8|10-12|14-15"}
# Logging into the HPC cluster
ssh <SWC-USERNAME>@ssh.swc.ucl.ac.uk # Provide password
ssh hpc-gw1 # Provide password again

# Navigate to your SLEAP project
cd /ceph/scratch/neuroinformatics-dropoff/SLEAP_HPC_test_data
# Check the contents of your folder
ls -l

# Go inside the exported training package
cd labels.v001.slp.training_job
ls -l

# View the contents of train-script.sh
cat train-script.sh
```

::: {.fragment}
```{.bash filename="train-script.sh"}
#!/bin/bash
sleap-train centroid.json labels.v001.pkg.slp
sleap-train centered_instance.json labels.v001.pkg.slp
```
:::

## Get SLURM to run the script {.smaller}

::: {.panel-tabset}

### Interactive
Suitable for debugging (immediate feedback)

- Start an interactive job with one GPU
  ```{.bash code-line-numbers=false}
  srun -p gpu --gres=gpu:1 --pty bash -i
  ```
- Execute commands one-by-one, e.g.:
  ```{.bash code-line-numbers=false}
  module load SLEAP
  cd <MY-TRAINING-DIRECTORY>
  bash train-script.sh

  # Stop the session
  exit
  ```

### Batch
Main method for submitting jobs

- Prepare a batch script, e.g. `run_sleap_training.sh`
- Submit the job:
  ```{.bash code-line-numbers=false}
  sbatch run_sleap_training.sh
  ```
- Monitor job status: 
  ```{.bash code-line-numbers=false}
  squeue -u <SWC-USERNAME>
  ```

### Array batch
Useful for submitting many similar jobs

- Write a batch script
- Execute the script over an array of inputs in parallel
:::


## Compose batch script {.smaller}

```{.bash}
# Clone the GitHub repository
git clone https://github.com/neuroinformatics-unit/swc-hpc-pose-estimation.git

# View the contenrs of the SLURM script
cat swc-hpc-pose-estimation/SLEAP/slurm_batch_script.sh
```

::: {.fragment}

```{.bash filename="slurm_batch_script.sh" code-line-numbers="|1-12|13-21|"}
#!/bin/bash

#SBATCH -p gpu # partition (queue)
#SBATCH -N 1   # number of nodes
#SBATCH --mem 12G # memory pool for all cores
#SBATCH -n 2 # number of cores
#SBATCH -t 0-06:00 # time (D-HH:MM)
#SBATCH --gres gpu:1 # request 1 GPU (of any kind)
#SBATCH -o slurm.%N.%j.out # STDOUT
#SBATCH -e slurm.%N.%j.err # STDERR
#SBATCH --mail-type=ALL
#SBATCH --mail-user=ucqfnsi@ucl.ac.uk

# Load the SLEAP module
module load SLEAP

# Go to the training job directory
cd /ceph/scratch/neuroinformatics-dropoff/SLEAP_HPC_test_data/labels.v001.slp.training_job

# Run the training script generated by SLEAP
bash train-script.sh
```
:::

## Submit and monitor batch script {.smaller}

```{.bash code-line-numbers="1-3|5-9|10-16|17-19"}
# Submit job
$ sbatch swc-hpc-pose-estimation/SLEAP/slurm_batch_script.sh
Submitted batch job 3445652

# View status of queued/running jobs
$ squeue -u <SWC-USERNAME>
JOBID    PARTITION  NAME     USER      ST  TIME   NODES  NODELIST(REASON)
3445652  gpu        slurm_ba sirmpila  R   23:11  1      gpu-sr670-20

# View status of running/completed jobs
$ sacct -u <SWC-USERNAME>
JobID           JobName  Partition    Account  AllocCPUS      State ExitCode 
------------ ---------- ---------- ---------- ---------- ---------- -------- 
3445652      slurm_bat+        gpu     swc-ac          2    RUNNING      0:0 
3445652.bat+      batch                swc-ac          2    RUNNING      0:0

# View the contents of standard output and error
$ cat slurm.gpu-sr670-20.3445652.out
$ cat slurm.gpu-sr670-20.3445652.err
```

## Useful links {.smaller}

#### Pose estimation
- [Quantifying behavior to understand the brain](https://doi.org/10.1038/s41593-020-00734-z)
- [DeepLabCut](http://www.mackenziemathislab.org/deeplabcut)
- [SLEAP](https://sleap.ai/)

#### SWC wiki
- [Overview of SLURM job scheduler](https://wiki.ucl.ac.uk/display/SSC/Overview+of+SLURM+job+scheduler)
- [Logging into the Cluster](https://wiki.ucl.ac.uk/display/SSC/Logging+into+the+Cluster)
- [CPU and GPU Platform Architecture](https://wiki.ucl.ac.uk/display/SSC/CPU+and+GPU+Platform+architecture)
- [Linux Environment Modules](https://wiki.ucl.ac.uk/display/SSC/Linux+Environment+Modules)

## Acknowledgements {.smaller}

* Loukia Katsouri (mouse videos)
* Chang Huan Lo (SLEAP Python code)
* Alex Martin (setting up HPC modules)
* Sofia Minano and Laura Schwarz (testing)
